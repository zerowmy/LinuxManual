2.2.5 文本修改操作
在命令模式下可以使用 vi 提供的各种有关命令对文本进行修改 包括对文本
内容的删除 复制 取代和替换等
1. 文本删除/移动
在编辑文本时 经常需要删除一些不需要的文本 我们可以用<Backspace>
键将输错或不需要的文本删除 但此时有一个限制就是当删到行头之后 再
想删上面那行的内容是不可能的
在命令模式下 vi 提供了许多删除命令 这些命令大多是以 d 开头的 常用的
有
1 . 删除单个字符
x  删除光标处的字符 若在 x之前加上一个数字 n 则删除从光标所在位置
开始向右的 n 个字符
X  删除光标前面的那个字符 若在 X之前加上一个数字 n 则删除从光标
前面那个字符开始向左的 n 个字符
显然这两个命令是删除少量字符的快捷方法
2 . 删除多个字符
dd  删除光标所在的整行 在 dd 前可加上一个数字 n 表示删除当前行及
其后 n-1 行的内容
D 或 d$  两命令功能一样 都是删除从光标所在处开始到行尾的内容
d0  删除从光标前一个字符开始到行首的内容
dw  删除一个单词 若光标处在某个词的中间 则从光标所在位置开始删至
词尾 同 dd 命令一样 可在 dw之前加一个数字 n 表示删除 n 个指定的单
词
如果用户不小心进行了误删除操作 也不要紧 vi 提供了恢复误操作的命令
并且可以将恢复的内容移动 放在文本的任何地方 恢复命令用 np 其
中 n 为需要恢复的次数 例如使用 dd 命令删除了一行内容 然后使用 2p
命令 则被删除的内容会被重新插入两遍
通过 dd 命令及 p 命令的结合使用 可以很方便的实现文本行的移动操作
2. 文本复制命令
yy  复制光标所在的整行 在 yy 前可加上一个数字 n 表示复制当前行及其
后 n-1 行的内容
文本行复制后 通过使用上面介绍的 p 命令 可以将文本行粘贴到任何地
方
dd yy 及 p 命令在 vi 中的作用 类似于 Windows 中图形编辑程序的 剪切
复制 及 粘贴 命令
3. 取消上一命令 Undo
取消上一命令 Undo 也称复原命令 是非常有用的命令 它可以取消前
一次的误操作或不合适的操作对文件造成的影响 使之回复到这种误操作或
不合适操作被执行之前的状态
取消上一命令有两种形式 在命令模式下键入字符 u 和 U 它们的功能都是
取消刚才输入的命令 恢复到原来的情况 小写 u 和大写 U 在具体细节上有
所不同 二者的区别在于 大写 U命令的功能是恢复到误操作命令前的情况
即如果插入命令后使用 U 命令 就删除刚刚插入的内容 如果删除命令后使
用 U 命令 就相当于在光标处又插入刚刚删除的内容 这里把所有修改文本
的命令都视为插入命令 也就是说 U 命令只能取消前一步操作 如果用 U
命令撤消了前一步操作 当再按 U 键时 并不是撤消再前一步的操作 而是
撤消了刚才 U命令执行的操作 也就是又恢复到第一次使用 U 命令之前的状
态 结果是什么都没做 而小写 u 命令的功能是把当前行恢复成被编辑前的
状态 而不管此行被编辑了多少次
4. 重复命令 Redo
重复命令也是一个非常常用的命令 在文本编辑中经常会碰到需要机械地重
复一些操作 这时就需要用到重复命令 它可以让用户方便地再执行一次前
面刚完成的某个复杂的命令
重复命令只能在命令模式下工作 在该模式下按 . 键既可 执行一个重复
命令时 其结果是依赖于光标当前位置的